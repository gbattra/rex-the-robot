//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Roborex
{
    public class JointState : Message
    {
        public const string RosMessageName = "roborex/JointState";

        public Geometry.Point translation;
        public float angle;
        public float upper_bound;
        public float lower_bound;
        public int axis;

        public JointState()
        {
            this.translation = new Geometry.Point();
            this.angle = 0.0f;
            this.upper_bound = 0.0f;
            this.lower_bound = 0.0f;
            this.axis = 0;
        }

        public JointState(Geometry.Point translation, float angle, float upper_bound, float lower_bound, int axis)
        {
            this.translation = translation;
            this.angle = angle;
            this.upper_bound = upper_bound;
            this.lower_bound = lower_bound;
            this.axis = axis;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(translation.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.angle));
            listOfSerializations.Add(BitConverter.GetBytes(this.upper_bound));
            listOfSerializations.Add(BitConverter.GetBytes(this.lower_bound));
            listOfSerializations.Add(BitConverter.GetBytes(this.axis));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.translation.Deserialize(data, offset);
            this.angle = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.upper_bound = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.lower_bound = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.axis = BitConverter.ToInt32(data, offset);
            offset += 4;

            return offset;
        }

        public override string ToString()
        {
            return "JointState: " +
            "\ntranslation: " + translation.ToString() +
            "\nangle: " + angle.ToString() +
            "\nupper_bound: " + upper_bound.ToString() +
            "\nlower_bound: " + lower_bound.ToString() +
            "\naxis: " + axis.ToString();
        }
    }
}
