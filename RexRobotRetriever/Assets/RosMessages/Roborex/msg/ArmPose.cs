//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Roborex
{
    public class ArmPose : Message
    {
        public const string RosMessageName = "roborex/ArmPose";

        public JointState world_joint;
        public JointState base_joint;
        public JointState shoulder_joint;
        public JointState elbow_joint;
        public JointState wrist_joint;
        public JointState eff_joint;
        public JointState gripper_offset_joint;
        public JointState right_gripper_joint;
        public JointState left_gripper_joint;

        public ArmPose()
        {
            this.world_joint = new JointState();
            this.base_joint = new JointState();
            this.shoulder_joint = new JointState();
            this.elbow_joint = new JointState();
            this.wrist_joint = new JointState();
            this.eff_joint = new JointState();
            this.gripper_offset_joint = new JointState();
            this.right_gripper_joint = new JointState();
            this.left_gripper_joint = new JointState();
        }

        public ArmPose(JointState world_joint, JointState base_joint, JointState shoulder_joint, JointState elbow_joint, JointState wrist_joint, JointState eff_joint, JointState gripper_offset_joint, JointState right_gripper_joint, JointState left_gripper_joint)
        {
            this.world_joint = world_joint;
            this.base_joint = base_joint;
            this.shoulder_joint = shoulder_joint;
            this.elbow_joint = elbow_joint;
            this.wrist_joint = wrist_joint;
            this.eff_joint = eff_joint;
            this.gripper_offset_joint = gripper_offset_joint;
            this.right_gripper_joint = right_gripper_joint;
            this.left_gripper_joint = left_gripper_joint;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(world_joint.SerializationStatements());
            listOfSerializations.AddRange(base_joint.SerializationStatements());
            listOfSerializations.AddRange(shoulder_joint.SerializationStatements());
            listOfSerializations.AddRange(elbow_joint.SerializationStatements());
            listOfSerializations.AddRange(wrist_joint.SerializationStatements());
            listOfSerializations.AddRange(eff_joint.SerializationStatements());
            listOfSerializations.AddRange(gripper_offset_joint.SerializationStatements());
            listOfSerializations.AddRange(right_gripper_joint.SerializationStatements());
            listOfSerializations.AddRange(left_gripper_joint.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.world_joint.Deserialize(data, offset);
            offset = this.base_joint.Deserialize(data, offset);
            offset = this.shoulder_joint.Deserialize(data, offset);
            offset = this.elbow_joint.Deserialize(data, offset);
            offset = this.wrist_joint.Deserialize(data, offset);
            offset = this.eff_joint.Deserialize(data, offset);
            offset = this.gripper_offset_joint.Deserialize(data, offset);
            offset = this.right_gripper_joint.Deserialize(data, offset);
            offset = this.left_gripper_joint.Deserialize(data, offset);

            return offset;
        }

        public override string ToString()
        {
            return "ArmPose: " +
            "\nworld_joint: " + world_joint.ToString() +
            "\nbase_joint: " + base_joint.ToString() +
            "\nshoulder_joint: " + shoulder_joint.ToString() +
            "\nelbow_joint: " + elbow_joint.ToString() +
            "\nwrist_joint: " + wrist_joint.ToString() +
            "\neff_joint: " + eff_joint.ToString() +
            "\ngripper_offset_joint: " + gripper_offset_joint.ToString() +
            "\nright_gripper_joint: " + right_gripper_joint.ToString() +
            "\nleft_gripper_joint: " + left_gripper_joint.ToString();
        }
    }
}
